% TeX FAQ (im Aufbau)
% Patrick Gundlach;
% 2012-11-05
<!-- Autoren bitte unten eintragen -->

----

Allgemeines
===========

Was ist TeX?
------------

TeX (gesprochen: Tech) ist eine Software zur **Formatierung von Texten**. Der Unterschied zu anderen Textverarbeitungssystem wie Word und OpenOffice.org ist, dass aus einer TeX-Datei, die vom Anwender erstellt wird, eine PDF-Datei generiert wird. Die ursprüngliche TeX-Datei wird mit einem Texteditor bearbeitet. Hierbei können verschiedene Befehle zur Gestaltung des Textes verwendet werden.

Die Ausgabedatei im PDF-Format kann dann mit jedem Rechner problemlos betrachtet werden. Die Darstellung ist auf jedem Rechner gleich. Es drohen keine Darstellungsprobleme oder Versionskonflikte.

Außerdem kann man TeX auch als Programmiersprache verwenden und bestimmte Dinge vereinfachen. Zum Beispiel unterstützt LaTeX von Haus aus automatische Gliederungsbefehle, die dann bei Bedarf individuell angepasst werden können.

Wie installiere ich TeX?
------------------------

Um TeX, LaTeX und Co. verwenden zu können, braucht man eine sogenannte **TeX-Distribution**. Bekannte TeX-Distributionen sind [**TeX Live**](http://tug.org/texlive) (plattformübergreifend) und [**MiKTeX**](http://miktex.org) (Windows). Diese TeX-Distributionen sind freie Software und können daher kostenlos heruntergeladen und installiert werden.

### Linux

Die meisten Linux-Distributionen bieten über die Paketverwaltung eine TeX-Live-Installation an. (Das entsprechende Paket heißt in allen gängigen Distributionen `texlive`.) Für den Einstieg ist diese vollkommen ausreichend. Erfahrene Benutzer können TeX Live manuell aus anderen Quellen installieren, um immer eine aktuelle Version zu haben.

### Windows

Die einfachste Möglichkeit, TeX unter Windows zu installieren, ist MiKTeX. Auf der [MiKTeX-Homepage](http://miktex.org/download) steht ein Installer zum Download bereit.

### Mac OS X

Für Mac OS X gibt es eine Distribution, die auf TeXlive aufbaut: [The MacTeX-2012 Distribution](http://tug.org/mactex/). Erfahrene Anwender können auch über die Kommandozeile TeXlive installieren. 

Achtung: Es gibt noch vereinzelt Hinweise im Netz, die den den i-Installer empfehlen. Dieser wird aber nicht mehr weiter entwickelt.

Hilfe für TeX unter Mac OS X gibt es in der englischsprachigen Mailingliste »MacOSX-TeX«, die auf der Hilfe Seite unter <http://tug.org/mactex/help/> verlinkt ist.

Wie fange ich an, wenn ich LaTeX lernen möchte?
-----------------------------------------------

Mit jeder TeX-Distribution wird eine große Menge an Dokumentation mitgeliefert. Diese sind jedoch oft sehr speziell und daher nicht wirklich geeignet, um LaTeX zu lernen. Zum Einstieg bietet sich ein kostenloses Dokument »l2kurz.pdf« an, das unter <http://mirror.ctan.org/info/lshort/german/l2kurz.pdf> bzw. in der Distribution über den Kommandozeilenbefehl `texdoc l2kurz` aufgerufen werden kann.

Weiterhin gibt es eine schier unüberschaubare Menge an Literatur zu LaTeX. In der alten FAQ gibt es [eine ausführliche Literaturliste](http://projekte.dante.de/DanteFAQ/Literatur): <http://projekte.dante.de/DanteFAQ/Literatur>


Worin liegt der Unterschied zwischen TeX, LaTeX und ConTeXt?
----------------------------------------------------------

TeX ist die Grundlage aller Erweiterungen. Es bietet nur recht einfache Programmierbefehle, um Texte zu setzen. 

LaTeX und ConTeXt nutzen diese einfachen Befehle, um für den Benutzer eine wesentlich bequemere Schnittstelle zur Verfügung zu stellen. So bieten die sogenannten »Formate« LaTeX und ConTeXt einen Befehl
`\section{...}`, um einen neuen Abschnitt einzuleiten. Intern werden dann TeX-Befehle ausgeführt um die Schriftart beispielsweise auf 12 Punkt Fett umzuschalten, einen Abstand vorher und nachher einzufügen, gegebenenfalls eine neue Seite zu beginnen, eine Abschnittsnummer vor die Überschrift zu setzen sowie einen Eintrag in das Inhaltsverzeichnis einzufügen. Das erspart dem Anwender viel mühselige Arbeit und ermöglicht es, das Layout zentral zu steuern.

Anfänger greifen in der Regel auf das Format »LaTeX« zurück, da es dafür mehr deutschsprachige Literatur gibt. Auch behandelt diese FAQ größtenteils dieses Format. Sofern nicht anders angegeben, beziehen sich alle Fragen darauf.

Was sind PDFTeX, LuaTeX und XeTeX?
---------------------------------

PDFTeX, LuaTeX und XeTeX sind sogenannte »engines«, also die Maschinen, die die oben genannten TeX Formate ausführen. Beispielsweise läuft LaTeX sowohl unter PDFTeX, als auch unter LuaTeX und XeTeX. Jedes dieser Programme hat seine Vor- und Nachteile. PDFTeX ist der direkte Nachfolger von dem originalen TeX von D.E. Knuth (dem ursprünglichen Entwickler von TeX), aber um die Möglichkeit erweitert, direkt PDF anstelle dem TeX eigenen DVI Format auszugeben. PDFTeX ist vermutlich derzeit die am meisten eingesetzte »engine«. Es gibt mehrere Nachfolger von PDFTeX, von denen XeTeX und LuaTeX die wichtigsten sind. Beide können mit OpenType Schriftarten und Unicode (UTF-8) problemlos umgehen. Unterschiedlich ist, wie diese beiden Programme intern arbeiten. Derzeit ist XeTeX wohl etwas stabiler als LuaTeX, die Erweiterbarkeit von LuaTeX wird aber vermutlich XeTeX mittelfristig ablösen. 



Wie bearbeite ich LaTeX-Dokumente?
--------------------------------

LaTeX Quellcode wird in reinen Textdateien gespeichert. Sie können im Prinzip mit jedem Texteditor bearbeitet werden (siehe dazu den [Artikel in der Wikipedia](http://de.wikipedia.org/wiki/Texteditor): <http://de.wikipedia.org/wiki/Texteditor>). Es bieten sich spezielle Editoren für LaTeX an. Es gibt hier im Prinzip zwei Arten. Einerseits die *normalen* Texteditoren wie Emacs oder Textmate, die um LaTeX Fähigkeiten erweitert werden. Andererseits gibt es Editoren wie TeXnicCenter, die speziell für den Einsatz mit LaTeX konstruiert wurden. Als Dateiendung hat sich `.tex` etabliert

Neben diesen Texteditoren gibt es noch spezielle Anwendungen wie Lyx oder Scientific WorkPlace, die die TeX-Befehle sofort grafisch darstellen, meist aber in einer »so ungefähr könnte es später aussehen« Vorschau. 

Einen Vergleich der LaTeX Editoren gibt es beispielsweise auf tex.stackexchange.com unter <http://tex.stackexchange.com/questions/339/latex-editors-ides>.


Kann ich LaTeX auch online verwenden?
-------------------------------------

Wenn man an einem fremden Rechner ohne LaTeX-Installation arbeiten muss, kann ein LaTeX-Editor in der Cloud hilfreich sein. Momentan gibt es dazu folgende Angebote:

 - **[ShareLaTeX](https://www.sharelatex.com)**, noch in der Entwicklung, kostenlos, private und öffentliche Projekte, Live-Kollaboration
 - **[ScribTeX](http://www.scribtex.com)**, drei kostenlose Projekte, größere oder mehr Projekte kostenpflichtig
 - **[verbosus](https://www.verbosus.com/)**, Standardaccount kostenlos, Premiumaccount kostenpflichtig


Wo bekomme ich Hilfe?
---------------------

Weitere Quellen für Informationen und Hilfe rund um TeX sind:

### Deutsch

- Die [Mailingliste](https://de.wikipedia.org/wiki/Mailingliste) »tex-d-l«. Archiv und Eintragen unter <http://www.listserv.dfn.de/archives/tex-d-l.html>
- Das Webforum [golatex](http://www.golatex.de/): <http://www.golatex.de/>
- Das LaTeX Forum bei [mrunix.de](http://mrunix.de/forums/forumdisplay.php?f=38): <http://mrunix.de/forums/forumdisplay.php?f=38>
- Hilfen speziell für KOMA-Script: <http://www.komascript.de/>
- Die [Newsgruppe](https://de.wikipedia.org/wiki/Usenet): [de.comp.text.tex](https://groups.google.com/forum/#!forum/de.comp.text.tex)

### Englisch

- [TeX Stack Exchange](http://tex.stackexchange.com/)
- Die [Newsgruppe](https://de.wikipedia.org/wiki/Usenet) [comp.text.tex](https://groups.google.com/forum/#!forum/comp.text.tex)
- Das Forum [LaTeX Community](http://latex-community.org/)
- Die Anleitung zu einem Paket X, welches mit \usepackage[]{X} eingebunden wird kann sowohl unter Windows, als auch unter Linux in einer Konsole mit texdoc X geöffnet werden.

Weiterhin gibt es noch diverse Blogs über TeX & friends, die unter <http://planet.dante.de/> gesammelt sind.

Äußere Erscheinung der Dokumente
================================

Ränder
------

* KOMA Skript?
* Geometry Paket


Schriftarten
------------

### Wie ändere ich die Schriftart in meinem Dokument?

Es gibt mehrere Möglichkeiten, die Schriftart in einem Dokument zu ändern. Für manche Schriftarten werden Pakete gepflegt, die über `\usepackage` eingebunden werden können. Eine Übersicht über diese Pakete findet sich im [LaTeX Font Catalogue](http://www.tug.dk/FontCatalogue/) unter <http://www.tug.dk/FontCatalogue/>. Dort steht auch jeweils, wie die Schrift eingebunden werden kann.

Wenn statt einer Serifenschrift eine serifenlose Schrift als Standard verwendet werden soll, kann der Befehl

    \renewcommand{\familydefault}{\sfdefault}

verwendet werden.

Bei der Verwendung von XeTeX kann jede im System installierte Schriftart verwendet werden. Hierfür dienen die Befehle `\setmainfont`, `\setsansfont` und `\setmonofont`:

    \setmainfont[Mapping=tex-text]{Linux Libertine O}
    \setsansfont[Mapping=tex-text]{Source Sans Pro}
    \setmonofont[Mapping=tex-text]{Source Code Pro}
    
### Wie ändere ich die Schriftgröße in meinem Dokument?

Um die Schriftgröße zu verändern, kann man zum einen die Befehle `\small`, `\large`, `\huge` etc. verwendet werden, mit denen einzelne Worte, Sätze, Bereiche größer oder kleiner gesetzt werden. Bei der Verwendung von KOMA-Script-Klassen kann die Schriftgröße global über das Argument `fontsize` geändert werden, zum Beispiel:

    \documentclass[fontsize=12pt]{scrartcl}

Ich benötige ein spezielles Symbol in meinem Dokument. Wie kann ich es finden?
------------------------------------------------------------------------------

Meist kann man nur in einem Handbuch nach dem Befehl suchen, der ein spezielles Symbol erzeugt. Hilfreich hat sich das Dokument »Comprehensive LaTeX symbols list« erwiesen, das unter <http://texdoc.net/pkg/symbols-a4.pdf> oder mithilfe der Kommandozeile `texdoc symbols-a4` zu lesen ist. 

Daneben gibt es noch einen prima Webdienst, [Detextify](http://detexify.kirelabs.org/classify.html). Hier zeichnet man mit der Maus auf einer Webseite ein Symbol, das man sucht und bekommt den Befehl zurück.

![Bei detexify.org kann man ein Symbol malen und man erhält den passenden latex Befehl dazu](img/detexify.png)


Abbildungen und Gleitumgebungen
================================

Wie kann ich die Positionierung der Gleitumgebungen (Tabellen und Abbildungen) beeinflussen?
--------------------------------------------------------------------------------------------

Wie kann ich Tabellen und Abbildungen in der Nähe des Aufrufs behalten?
-----------------------------------------------------------------------

Wie kann ich ein Gleitobjekt das alleine auf einer Seite steht oben an der Seite ausrichten und nicht vertikal zentriert?
----------------------------------------------------------------------------------------------------

Hat man ein Gleitobjekt das alleine auf einer Seite steht, dann wird dieses automatisch
auf die Mitte der Seite gesetzt. Dies ist häufig unerwünscht.

Es gibt drei Längen die die Platzierung beeinflussen:

1. `\@fptop` ist der Abstand vom oberen Seitenrand zum ersten Float-Objekt
1. `\@fpsep` ist der Abstand zwischen zwei Float-Objekten
1. `\@fpbot` ist der Abstand des unteren Randes der untersten Abbildung zum unteren Seitenrand
  
Die Standards von LaTeX sind wie folgt definiert:

    \@fptop = 0pt + 1fil
    \@fpsep = 8pt + 2fil
    \@fpbot = 0pt + 1fil

Diese Definitionen sorgen dafür, dass der Freiraum zwischen einem oder mehreren Bildern gleichmäßig verteilt wird.

Um ein Gleitobjekt nun oben auf der Seite zu platzieren kann man den oberen Abstand redefinieren:

    \makeatletter
    \setlength{\@fptop}{0pt}
    \makeatother 

Es kann nun sein, dass die Gleitumgebung im Vergleich zu einer Textseite als zu hoch erscheint.
Dazu kann man nun `\@fptop` auf den Wert `{4pt}` setzen was ungefähr dem Wert `\topskip` - der Höhe des normalen Texts entspricht. `\topskip` ist der Abstand vom oberen Seitenrand zur Grundlinie der ersten Textzeile.

Es ist zu beachten, dass dies eine globale Einstellung ist die sich auf das ganze Dokument auswirkt. Deshalb sollte diese Änderung in der Klassendatei (`*.cls`)
oder in der Präambel des Dokumentes vorgenommen werden.


Bibliographien und Literaturverweise
====================================

Was ist BibTeX?
--------------------------
BibTeX ist ein Programm, mit dem man Literaturverweise und Bibliographien erstellen kann. 
Es benutzt dazu »Anker« (`\cite`-Befehle) in einem LaTeX-Dokument, die es zunächst sammelt 
und in einem zweiten Schritt die dazugehörigen Daten aus einer separaten Datei mit der 
Endung `.bib` entnimmt. Die Darstellung der Verweise und des Literaturverzeichnisses lässt 
sich durch `bst`-Dateien beeinflussen (`bst` steht für »bibliography style«). Es gibt
eine Reihe von Bibliographiestilen, die unterschiedliche Vorgaben erfüllen. Eine Auswahl 
davon kann man sich anhand von Beispielen auf der Seite [BibTeX style examples](http://www.cs.stir.ac.uk/~kjt/software/latex/showbst.html)
anschauen. Die Anpassung von Bibliographiestilen ist nicht gerade trivial, da sie in einer 
Programmiersprache abgefasst sind, die in Form einer Stackmaschine mit nur wenigen 
Befehlen funktioniert ([Umgekehrte Polnische Notation](http://de.wikipedia.org/wiki/Umgekehrte_Polnische_Notation)).

BibTeX wurde 1988 geschrieben (bis Version 0.99c) und 2010 aktualisiert (Version 0.99d). 

- kurz etwas zu den Beschränkungen
- bibtex8
- bibtexu

Was ist biber?
--------------

- biber als Nachfolger von bibtex (dem Programm)

Was sind `.bib`-Dateien?
------------------------

- BibTeX-Syntax (.bib-Dateien)

Was ist biblatex?
-----------------
[Biblatex](http://mirror.ctan.org/help/Catalogue/entries/biblatex.html) ist ein Makropaket zum Erstellen von Literaturverzeichnissen mit LaTeX und 
BibTeX, das bereits mehrere Zitierstile enthält und eine hohe Flexibilität aufweist. 
Das Paket wurde im August 2006 von Philipp Lehman erstmals vorgestellt. Seit der Version 
0.9 ist es auch in den gängigen TeX-Distributionen wie MiKTeX oder TeX Live enthalten. 

Anders als »herkömmliche« Bibliographie-Pakete benutzt biblatex das Programm BibTeX nur 
zur Sortierung der Einträge im Literaturverzeichnis und zur Erzeugung von Labels. Die 
Formatierungen werden dagegen mit LaTeX-Befehlen vorgenommen, was es einfacher macht, 
die vorhandenen Bibliographiestile anzupassen oder eigene Stile zu schreiben. 
Biblatex unterstützt auch unterteilte Bibliographien, mehrere Bibliographien innerhalb 
eines Dokuments und separate Listen bibliographischer Abkürzungen (Sigelverzeichnisse).

Es gibt auch eine [deutsche Übersetzung der biblatex-Dokumentation](http://mirror.ctan.org/help/Catalogue/entries/translation-biblatex-de.html).

Spezialitäten
=============

Was machen `\makeatletter` und `\makeatother`?

Alle Zeichen in LaTex besitzen einen category code (catcode). Insgesammt gibt es 16 catcodes, 
wobei z.B. normalen Buchstaben (a-z,A-Z) den catcode 11 erhalten. Sonderzeichen wie "\" (catcode 0) oder "{" (catcode 1)
und eben auch "@" (catcode 12) werden daher nicht als normale Buchstaben behandelt und dürfen somit
vom normalen Benutzer nicht in Macros verwendet werden. Deshalb sind z.B. Macronamen wie "\foo123" oder "\foo!"
ungültig.

In Klassen- (.cls) und Stildateien (.sty) wird "@" jedoch als catcode 11 behandelt und somit
sind Macros wie z.B. "\@foo" zulässig. Dies erlaubt, dass solche Definitionen vom normalen Benutzer
geschützt/versetckt werden um z.B. ein versehentliches Überschreiben eines Macros zu verhindern.

Es gibt jedoch manchmal den Bedarf Klassen- oder Stilmacros in der eigenen Datei dennoch zu modifizieren. 
Dazu möchte man nicht immer gleich eine eigene Klassen- oder Stildatei anlegen sondern die Änderung direkt im
eigenen Dokument vornehmen (meist in der Preambel). Dafür können dann folgende Befehle verwendet werden:

\makeatletter %Ändert @ catcode von 12 zu 11
---Definition--
\makeatother %Ändert @ catcode zurück von 11 zu 12 

Ein Beispiel ist das Ändern der Position von Gleitobjekten auf sonst leeren Seiten:

\makeatletter
\setlength{\@fptop}{0pt} %Gleitobjekt oben statt mittig auf sonst leerer Seite
\makeatother


Vollständigkeitshalber hier noch eine Liste aller catcodes:

0 für escape "\",
1 für den Beginn einer Gruppe "{",
2 für das Ende einer Gruppe "}",
3 für inline Mathemodus "$",
4 für den Spaltenausrichter "&",
5 für das Zeilenede,
6 für Hash "#",
7 für das Hoch-Zeichen "^",
8 für das Tiefgestellt-Teichen "_",
9 für "ignored characters",
10 für ein Leerzeichen,
11 für Buchstaben,
12 für alles was nicht in 1-11 und 12-15 genannt ist
13 für das "~" Zeichen,
14 für das Kommentarzeichen "%" und
15 für ungültige Zeichen

---------------------------------------------

Wie erstelle ich eine Nomenklatur/ Abkürzungsverzeichnis/ Formelzeichenverzeichnis?
-----------------------------------------------------------------------------------

Es gibt mehrere Pakete die sich mit dem Erstellen der oben genannten
Verzeichnisse beschäftigen. Die bekanntesten sind nomencl und glossaries. Das
glossary Paket ist veraltet und sollte nicht mehr verwendet werden.

Das nomencl Paket ist nur zu empfehlen wenn man nur eines der genannten
Verzeichnisse erstellen möchte. Wer eine Kombination von Verzeichnissen
benötigt, also z.B. Abkürzungs- und Formelzeichenverzeichnis, der ist besser
mit dem glossaries Paket beraten da sich dieses leichter konfigurieren lässt.

Beide Pakete haben den gleichen Grundansatz:

Man definiert Begriffe, Formelzeichen o.ä. mit einem vom Paket
bereitgestellten Befehl. Beim Kompilieren mit (pdf)latex werden diese Befehle
erkannt, gesammelt und in eine neue Datei geschrieben. Zum Sortieren der
Einträge wird dann makeindex aufgerufen. Makeindex ist ein externes Programm
das sowohl MikTeX als auch TeXlive standardmäßig beiliegt.

Makeindex liest die Datei in der die Begriffe gesammelt wurden ein,sortiert diese und schreibt erneut eine Datei mit den sortierten Begriffen und eventuellen Sonderinformationen wie z.B. die Seiten auf denen der Begriff verwendet wurde.

Nomencl und glossaries benötigen einen spezifischen Aufruf von makeindex der
in der Regel im Editor nicht voreingestellt ist. Dies ist eine häufige
Fehlerquelle. Mehr zum Aufruf von makeindex ist in den unterstehenden
Beispielen zu finden.

### glossaries

#### Ein Verzeichnis (Beispiel: Glossar)

Glossaries hat ein Standardverzeichnis 'main' das man z.B. als Glossar direkt verwenden kann.

    %Datei glossarbsp.tex
    \documentclass{article}
    \usepackage[T1]{fontenc}
    \usepackage{glossaries}
    \makeglossaries
    
    %Begriffdefinition
    \newglossaryentry{apf}{name=Apfel,  
    description={Ost aus der Gruppe der Kernobstgewächse}} 
    
    \begin{document}
    
    %Verwendung des Labels, wird im Text als 'Apfel' angezeigt.
    \gls{apf}
    
    %Ausgabe mit gewünschter Verzeichnisüberschrift
    \printglossary[title=Glossar]
    
    \end{document}

Folgende Kompilierreihenfolge ist einzuhalten:
1) pdf(latex)
2) makeindex
3) (pdf)latex

Für den makindex Aufruf hat man nun zwei Möglichkeiten. Expliziter Aufruf oder
Aufruf über das mitgelieferte Perl-Skript.  Tipp: Der Aufruf per Skript ist
auf jeden Fall zu empfehlen wenn man mehrere Verzeichnisse möchte.

1) Explizit:
Am einfachsten ist der Aufruf in einem Terminal. (Zur Vereinfachung lässt sich dieser Schritt auch im Editor als Prozedur einrichten)

Windows: 
Start ->Programme ->Zubehör -> Eingabeaufforderung
Von dort aus in das Projektverzeichnis in dem `glossarbsp.tex` liegt navigieren.

Im Verzeichnis dann folgenden Befehl ausführen:
    makeindex -s glossarbsp.ist -t glossarbsp.glg -o glossarbsp.gls glossarbsp.glo 

Linux:
Ein Terminal öffnen (z.B. Strg+Alt+T drücken).
Von dort aus in das Projektverzeichnis in dem `glossarbsp.tex` liegt navigieren.

Im Verzeichnis dann folgenden Befehl ausführen:
    makeindex -s glossarbsp.ist -t glossarbsp.glg -o glossarbsp.gls glossarbsp.glo 

2) Perl-Skript
Glossaries bringt ein Perl-Skript mit welches den Aufruf von makeindex stark vereinfacht

Windows:
Es wird ein installierter Perl Interpreter benötigt. Kostenlos ist z.B. Active Perl.

Start ->Programme ->Zubehör -> Einbageaufforderung
Von dort aus in das Projektverzeichnis in dem `glossarbsp.tex` liegt navigieren.

Im Verzeichnis dann folgenden Befehl ausführen:
    makeglossaries glossarbsp

Linux:
Ein Terminal öffnen (z.B. Strg+Alt+T drücken).
Von dort aus in das Projektverzeichnis in dem `glossarbsp.tex` liegt navigieren.

Im Verzeichnis dann folgenden Befehl ausführen:
    makeglossaries glossarbsp




#### Mehrere Verzeichnisse (Beispiel: Glossar, Abkürzungen, Formelzeichen)

Ein Glossar wird mit dem Standardverzeichnistyp 'main' erstellt. Per Option wird außerdem ein Abkürzungsverzeichnis erstellt

    \usepackage[acronym]{glossaries}

Um auch noch ein Formelzeichen-Verzeichnis zu bekommen, muss ein neuer Eintragtyp definiert werden. 

    \newglossary[fog]{formel}{foi}{foo}{Formelzeichen} 

`foi` und `foo` sind hierbei die Dateiendungen die die neuen Dateien erhalten die im laufe des Kompilierens erstellt werden, `fog` ist der Name der log-Datei.

Bei Formelzeichen merkt man schnell, dass man mit den vorhandenen Eintragtypen nicht auskommt. Denn ein Zeichen hat einen Namen (name=), eine Beschreibung (description=) ein mathematisches Symbol (symbol=) aber oft auch eine Einheit. Dafür kann man einen der user-Einträge verwenden.

    \newglossaryentry{dichte}{
    name=Dichte,  
    description={Verhältnis von Gewicht zu Volumen},
    symbol={$\rho$},
    type=formel,
    user1={kg/m3}
    } 

Erstellt man nun das Verzeichnis stellt man fest, dass die Einheit nicht mit ausgegeben wird. Das liegt daran, dass glossaries nicht weiß wo es diesen Eintrag darstellen soll. Deshalb muss man einen eigenen 'style' bemühen der diesen Eintrag mit anzeigt. Hier im Beispiel wird eine longtable-Tabelle verwendet. Der Stil wird unter eigenem Namen als 'mytab' abgespeichert. Bei der Ausgabe wird dann mit `style=mytab` explizit der Stil des Verzeichnisses angegeben. Möchte man im `symbol=` mathematischen Zeichen angeben, muss außerdem dem Paket die Option `sanitize={symbol=false}` mitgegeben werden.

    \documentclass{article}
    \usepackage[T1]{fontenc}
    \usepackage{longtable}
    
    \usepackage[acronym,sanitize={symbol=false}]{glossaries}
    
    %Neuer Eintragstyp
    \newglossary[fog]{formel}{foi}{foo}{Formelzeichen} 
    
    %Ein neuer Verzeichnisstil der auch die Einheit mit ausgibt
    \newglossarystyle{mytab}{%  
     % Verzeichnis wird ein 'longtable'  mit 5 Spalten
     \renewenvironment{theglossary}%  
      {\begin{longtable}{lccp{\glsdescwidth}p{\glspagelistwidth}}}%  
      {\end{longtable}}%  
     % Kopf der Tabelle
     \renewcommand*{\glossaryheader}{%  
      \bfseries Name & \bfseries Symbol & \bfseries Einheit &  %
      \bfseries Bescheibung & \bfseries Seite(n)  %
      \\\endhead}%  
     % Kein Abstand zwischen Gruppen 
      \renewcommand*{\glsgroupheading}[1]{}% 
        %    
      \renewcommand*{\glossaryentryfield}[5]{%  
     %   \glsentryitem{##1}% Entry number if required  
        \glstarget{##1}{##2}% Name 
            & ##4 %Symbol
            & \glsentryuseri{##1}%Einheit
        & ##3% Description  
        & ##5% Page list  
        \\% end of row  
      }% 
    }
    \makeglossaries
    
    %Einteag im Glossar
    \newglossaryentry{apf}{name=Apfel,  
    description={Ost aus der Gruppe der Kernobstgewächse}} 
    
    %Eintrag ins Abkürzungsverzeichnis
    \newacronym{cd}{CD}{Compact Disk}
    
    \newglossaryentry{dichte}{
    name=Dichte,  
    description={Verhältnis von Gewicht zu Volumen},
    symbol={$\rho$},
    type=formel,
    user1={km/m3}
    } 
    
    \begin{document}
    
    \gls{apf}
    
    \gls{cd}
    
    \gls{dichte} % =Dichte
    \glssymbol{dichte} %= $\rho$
    
    \printglossary[title=Glossar,type=main]
    \printglossary[title=Abkürzungen,type=\acronymtype]
    \printglossary[title=Formelzeichen,type=formel,style=mytab]
    
    \end{document}

Folgende Kompilierreihenfolge ist einzuhalten:
1) pdf(latex)
2) makeindex
3) (pdf)latex

Für den makindex Aufruf hat man nun zwei Möglichkeiten. Expliziter Aufruf oder Aufruf über das mitgelieferte Perl-Skript. 
Tipp: Der Aufruf per Skript ist auf jeden Fall zu empfehlen wenn man mehrere Verzeichnisse möchte.

1) Explizit:
Am einfachsten ist der Aufruf in einem Terminal. (Zur Vereinfachung lässt sich dieser Schritt natürlich auch im Editor als Prozedur einrichten)

Windows: 
Start ->Programme ->Zubehör -> Einbageaufforderung
Von dort aus in das Projektverzeichnis in dem 'glossarbsp.tex' liegt navigieren.

Im Verzeichnis dann folgende Befehle ausführen:
makeindex -s glossarbsp.ist -t glossarbsp.glg -o glossarbsp.gls glossarbsp.glo 
makeindex -s glossarbsp.ist -t glossarbsp.alg -o glossarbsp.acr glossarbsp.acn
makeindex -s glossarbsp.ist -t glossarbsp.fog -o glossarbsp.foi glossarbsp.foo


Linux:
Ein Terminal öffnen (z.B. Strg+Alt+T drücken).
Von dort aus in das Projektverzeichnis in dem 'glossarbsp.tex' liegt navigieren.

Im Verzeichnis dann folgenden Befehl ausführen:
    makeindex -s glossarbsp.ist -t glossarbsp.glg -o glossarbsp.gls glossarbsp.glo 
    makeindex -s glossarbsp.ist -t glossarbsp.alg -o glossarbsp.acr glossarbsp.acn
    makeindex -s glossarbsp.ist -t glossarbsp.fog -o glossarbsp.foi glossarbsp.foo

2) Perl-Skript
Glossaries bringt ein Perl-Skript mit welches den Aufruf von makeindex stark vereinfacht

Windows:
Es wird ein installierter Perl Interpreter benötigt. Kostenlos ist z.B. Active Perl.

Start ->Programme ->Zubehör -> Einbageaufforderung
Von dort aus in das Projektverzeichnis in dem 'glossarbsp.tex' liegt navigieren.

Im Verzeichnis dann folgenden Befehl ausführen:
    makeglossaries glossarbsp

Linux:
Ein Terminal öffnen (z.B. Strg+Alt+T drücken).
Von dort aus in das Projektverzeichnis in dem 'glossarbsp.tex' liegt navigieren.

Im Verzeichnis dann folgenden Befehl ausführen:
    makeglossaries glossarbsp


Mathematiksatz
==============
 
Warum soll ich `\[...\]` anstelle von `$$...$$` benutzen?
---------------------------------------------------------

Welche Regelungen zum Mathematiksatz kann ich heranziehen?
----------------------------------------------------------
ISO, EN


Wie kann ich einen aufrechten Differentialoperator erzeugen?
------------------------------------------------------------

    \newcommand*\diff{\mathop{}\!\mathrm{d}}

Quelle: *H. Voß*: Mathematiksatz. 2. Aufl. S. 76



DANTE
=====

Was ist DANTE?
--------------

Die *Deutschsprachige Anwendervereinigung TeX e. V.*, kurz DANTE, hat es sich zum Ziel gesetzt, die Nutzung von TeX durch Betreuung, Beratung und Förderung von Entwicklungsprojekten zu unterstützen. Nähere Informationen finden sich auf der Homepage [dante.de](http://www.dante.de).

Warum soll ich Mitglied werden?
-------------------------------

- DANTE fördert eine Reihe von Projekten im TeX-Umfeld. Beispielsweise wird die Weiterentwicklung freier Schriftarten (auch zusammen mit anderen TeX-Benutzergruppen) finanziert. DANTE übernimmt die Kosten für den deutschen CTAN Knoten, der TeX Software sammelt und so erst Distributionen wie TeXlive ermöglicht.
- Vereinszeitung [*Die TeXnische Komödie*](http://www.dante.de/DTK.html) erscheint viermal im Jahr und enthält viele exzellente Artikel rund um TeX.
- Als Mitglied kann man günstiger an Tagungen teilnehmen und erhält immer aktuelle Informationen zu den Veranstaltungen und Stammtischen.
- Es gibt eine Reihe Vergünstigungen, beispielsweise bei den Büchern der DANTE-Edition und für die WinEdt Lizenz.
- Die aktuellen TeX Distributionen und CTAN Abzüge werden meist jährlich auf DVD an die Mitglieder verschickt.


Wie werde ich Mitglied?
-----------------------

Der Mitgliedsantrag kann einfach [online auf dante.de](http://www.dante.de/index/Intern/Mitglied/AntragOnline.html) oder [schriftlich mit dem entsprechenden Formular](http://www.dante.de/index/Intern/Mitglied/AntragStandard.pdf) gestellt werden.


----

Über diese FAQ
===============

Ergänzungen und Korrekturen bitte an <info@texfragen.de> senden oder direkt im [Github-Archiv](https://github.com/texdoc/detexfaq) unter <https://github.com/texdoc/detexfaq> ergänzen. [Pull requests](https://help.github.com/articles/using-pull-requests) sind immer gerne gesehen. Die offizielle Seite ist <http://texfragen.de>.

Autoren
-------

Patrick Gundlach, Martin Hehn, Robin Krahl, Jonas Stein, Dominik Waßenhoven


Lizenz dieser FAQ
-----------------

Die Textbeiträge dieser FAQ unterliegen der Lizenz [CC-BY-SA](http://creativecommons.org/licenses/by-sa/3.0/deed.de). Dadurch ist es erlaubt, die Texte frei zu verwenden, sofern sie weiterhin unter denselben Bedingungen verbreitet und die Autoren genannt werden. Die genauen Bestimmungen finden sich [auf der Seite von Creative Commons](http://creativecommons.org/licenses/by-sa/3.0/deed.de) unter <http://creativecommons.org/licenses/by-sa/3.0/deed.de>.

<a rel="license" href="http://creativecommons.org/licenses/by-sa/3.0/deed.de"><img alt="Creative Commons Lizenzvertrag" style="border-width:0" src="img/cc-by-sa.png" /></a>
